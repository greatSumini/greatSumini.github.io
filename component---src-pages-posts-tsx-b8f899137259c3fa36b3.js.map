{"version":3,"file":"component---src-pages-posts-tsx-b8f899137259c3fa36b3.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/molecules/TagCard.tsx","webpack://gatsby-starter-blog/./src/components/organisms/TagsSection.tsx","webpack://gatsby-starter-blog/./src/components/molecules/PostCard/index.tsx","webpack://gatsby-starter-blog/./src/pages/posts.tsx","webpack://gatsby-starter-blog/./src/hooks/route.ts"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport type TagCardProps = {\n  label: string;\n  size: 'small' | 'large';\n  count?: number;\n  routing?: boolean;\n  selected?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onClick?: any;\n};\n\nexport default function TagCard({\n  label,\n  size,\n  count,\n  routing = true,\n  selected = false,\n  onClick,\n}: TagCardProps) {\n  return (\n    <Wrapper\n      href={routing ? `/posts?tag=${label}` : null}\n      {...{ size, selected }}\n      {...(routing\n        ? {}\n        : {\n            onClick: (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              if (onClick) {\n                onClick(e);\n              }\n              if (!routing) {\n                history.replaceState(null, null, `/posts?tag=${label}`);\n              }\n            },\n          })}\n    >\n      <Label size={size}>\n        #{label} {count}\n      </Label>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.a`\n  background-color: #eff1ff;\n  text-decoration: none;\n  margin: 5px;\n  width: fit-content;\n  height: fit-content;\n  cursor: pointer;\n  &:hover {\n    background-color: #d5dcff;\n  }\n  ${(props: { size; selected }) => ` \n    padding: ${{ small: 4, large: 8 }[props.size]}px;\n    ${props.selected && 'background-color: #d5dcff;'}\n  `}\n`;\n\nconst Label = styled.p`\n  color: #2d50ff;\n  ${(props: { size }) => ` \n  font-size: ${{ small: 12, large: 18 }[props.size]}px;\n  `}\n  font-weight: 400;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport TagCard from 'components/molecules/TagCard';\nimport theme from 'styles/theme';\n\nexport type Tag = {\n  tag: string;\n  totalCount: number;\n};\n\nexport type TagsSectionProps = {\n  tags: Tag[];\n  selectedTag: string;\n  selectTag: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport default function TagsSection({\n  tags,\n  selectedTag,\n  selectTag,\n}: TagsSectionProps) {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <Wrapper>\n      <TagsWrapper isOpen={isOpen}>\n        {tags?.map(({ tag, totalCount }) => (\n          <TagCard\n            key={tag}\n            label={tag}\n            count={totalCount}\n            size=\"large\"\n            routing={false}\n            selected={tag === selectedTag}\n            onClick={() => {\n              selectTag(tag === 'all' || tag === selectedTag ? '' : tag);\n            }}\n          />\n        ))}\n      </TagsWrapper>\n      {!isOpen && (\n        <>\n          <ShowMoreGradient />\n          <ShowMoreButton\n            onClick={() => {\n              setOpen(true);\n            }}\n          >\n            show all tags\n          </ShowMoreButton>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  width: 100%;\n  position: relative;\n  margin-bottom: 1.5rem;\n`;\n\nconst TagsWrapper = styled.nav`\n  display: flex;\n  flex-flow: row wrap;\n  padding: 16px;\n  justify-content: flex-start;\n  width: 100%;\n  margin-bottom: 1rem;\n  overflow: hidden;\n  height: fit-content;\n  ${(props: { isOpen: boolean }) => `\n    max-height: ${props.isOpen ? 'auto' : '130px'};\n  `}\n`;\n\nconst ShowMoreButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  bottom: -4px;\n  left: 0;\n  right: 0;\n  z-index: 10;\n\n  width: fit-content;\n  padding: 4px 12px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: white;\n  box-shadow: 0px 8px 12px rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n\n  font-weight: 500;\n`;\n\nconst ShowMoreGradient = styled.div`\n  position: absolute;\n  display: block;\n  width: 100%;\n  height: 36px;\n  bottom: 0;\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), white);\n  content: '';\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport moment from 'moment';\n\nimport TagCard from '../TagCard';\nimport { BLACK, LIGHT_GREY } from 'components/atoms/colors';\n\nimport theme from 'styles/theme';\n\nexport type PostCardProps = {\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    date: string;\n    title: string;\n    tags: string[];\n  };\n  thumbnail: FluidObject;\n  style?: React.CSSProperties;\n};\n\nexport default function PostCard({\n  excerpt,\n  fields,\n  frontmatter,\n  thumbnail,\n  style,\n}: PostCardProps) {\n  if (!frontmatter) {\n    return <Wrapper to={null} />;\n  }\n\n  const { slug } = fields;\n  const { title, date, tags } = frontmatter;\n\n  return (\n    <Wrapper to={slug} style={style}>\n      <Img\n        fluid={thumbnail}\n        style={{\n          width: '100%',\n          height: '180px',\n          objectFit: 'cover',\n          backgroundColor: '#fff',\n        }}\n      />\n      <DescriptionWrapper>\n        <Title>{title}</Title>\n        <Excerpt>{excerpt}</Excerpt>\n        {tags && (\n          <TagWrapper>\n            {tags?.slice(0, 3).map((tag) => (\n              <TagCard label={tag} size=\"small\" />\n            ))}\n          </TagWrapper>\n        )}\n        <Date>{moment(date).format('YYYY년 M월 D일')}</Date>\n      </DescriptionWrapper>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 24%;\n  height: fit-content;\n  border-radius: 8px;\n  box-shadow: 0px 12px 40px rgba(0, 0, 0, 0.25);\n  text-decoration: none;\n  color: ${BLACK};\n  transition: box-shadow 0.25s ease-in 0s, transform 0.25s ease-in 0s;\n  margin-bottom: 24px;\n  overflow: hidden;\n  ${theme.media.desktop`\n    width: 276px;\n    margin-bottom: 18px;\n  `}\n  @media (max-width: 1105px) {\n    width: 32.5%;\n  }\n  ${theme.media.tablet`\n    width: 250px;\n  `}\n  @media (min-width: 577px) and (max-width: 755px) {\n    width: 49.5%;\n  }\n  ${theme.media.phone`\n    width: 100%;\n    border-radius: 0;\n    margin-bottom: 8px;\n  `}\n`;\n\nconst DescriptionWrapper = styled.div`\n  padding: 12px 16px;\n  border-top: 1px solid ${LIGHT_GREY};\n`;\n\nconst StyledP = styled.p`\n  margin: 0;\n`;\n\nconst Title = styled(StyledP)`\n  font-size: 18px;\n  font-weight: 600;\n  width: 300px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-bottom: 10px;\n  ${theme.media.desktop`\n    width: 276px;\n  `}\n  ${theme.media.tablet`\n    width: 230px;\n  `}\n  ${theme.media.phone`\n    width: calc(100vw - 20px);\n  `}\n`;\n\nconst Excerpt = styled(StyledP)`\n  font-size: 14px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3; /* 라인수 */\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  line-height: 1.4em;\n  height: 4.2em;\n  ${theme.media.tablet`\n    width: 230px;\n  `}\n  ${theme.media.phone`\n    width: calc(100vw - 20px);\n    height: auto;\n    max-height: 4.2em;\n  `}\n`;\n\nconst Date = styled(StyledP)`\n  font-size: 14px;\n  font-weight: 400;\n  color: #888888;\n`;\nconst TagWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { graphql, PageProps } from 'gatsby';\n\nimport Layout from '../components/templates/layout';\nimport SEO from '../components/templates/seo';\nimport TagsSection from 'components/organisms/TagsSection';\nimport PostCard from 'components/molecules/PostCard';\n\nimport theme from 'styles/theme';\nimport { useQueryParams } from 'hooks/route';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function PostsPage({ data, location }: PageProps<any>) {\n  const siteTitle = data?.site.siteMetadata.title;\n  const posts = data?.allMarkdownRemark.edges;\n  const tags = data?.allMarkdownRemark.group;\n\n  const [tag, setTag] = useState('');\n  const { tag: paramTag } = useQueryParams();\n\n  useEffect(() => {\n    if (paramTag && paramTag !== 'all') {\n      setTag(paramTag);\n    }\n  }, [paramTag]);\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"posts\" />\n      <Wrapper>\n        <PageTitle>Posts</PageTitle>\n        <TagsSection\n          tags={[{ tag: 'all', totalCount: posts.length }, ...tags]}\n          selectedTag={tag}\n          selectTag={setTag}\n        />\n        <PostsWrapper>\n          {posts\n            .filter(\n              tag\n                ? (post) => post.node.frontmatter.tags.includes(tag)\n                : () => true\n            )\n            .concat([...Array(4)])\n            .map((post) => (\n              <PostCard\n                key={post?.node.fields.slug}\n                {...post?.node}\n                thumbnail={\n                  post?.node.frontmatter.thumbnail.childImageSharp.fluid\n                }\n              />\n            ))}\n        </PostsWrapper>\n      </Wrapper>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PostsPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { layout: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 60px 0;\n  width: 100%;\n`;\n\nconst PageTitle = styled.p`\n  margin: 0;\n  margin-left: 16px;\n  margin-bottom: 2rem;\n  font-size: 4rem;\n  font-weight: 700;\n  ${theme.media.phone`\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  `}\n`;\n\nconst PostsWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-content: flex-start;\n  width: 100%;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useQueryParams = (): { [name: string]: string } => {\n  const [params, setParams] = useState({});\n\n  useEffect(() => {\n    const temp = {};\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, ((\n      _str,\n      key,\n      value\n    ) => {\n      temp[key] = value;\n    }) as () => string);\n    setParams(temp);\n  }, []);\n\n  return params;\n};\n"],"names":["TagCard","label","size","count","routing","selected","onClick","href","e","history","Wrapper","styled","small","large","props","Label","TagsSection","tags","selectedTag","selectTag","useState","isOpen","setOpen","tag","totalCount","key","TagsWrapper","ShowMoreButton","ShowMoreGradient","PostCard","excerpt","fields","frontmatter","thumbnail","style","to","slug","title","date","fluid","width","height","objectFit","backgroundColor","moment","theme","DescriptionWrapper","StyledP","Title","Excerpt","Date","TagWrapper","PostsPage","data","location","siteTitle","posts","setTag","useQueryParams","params","setParams","useEffect","temp","window","paramTag","length","post","Array","PageTitle","PostsWrapper"],"sourceRoot":""}
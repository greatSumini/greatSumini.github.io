{"version":3,"file":"component---src-templates-blog-project-tsx-d2048e636bd042ca0a17.js","mappings":"0PAgFA,UAnE4B,SAAC,GAAoC,IAAlCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC1CC,EAAOH,EAAb,eACMI,EAAYJ,EAAAA,KAAAA,aAAlB,MAGQK,GAFmBJ,EAA3B,SAA2BA,EAA3B,KAEoBE,EAApB,SACQG,EAASH,EAAjB,YACA,EAAkCA,EAAlC,YAAQI,EAAR,OAAcC,EAAd,OAAoBC,EAApB,YACMC,EAAM,GAAGV,EAAAA,KAAAA,aAAN,QAAT,EACMW,EAAQF,EAAAA,gBAAAA,MAAd,IAEMG,GAAkBC,EAAAA,EAAAA,GAAmB,CACzCH,IADyC,EAEzCI,MAFyC,EAGzCH,MAHyC,EAIzCI,YAJyC,EAKzCC,cAAeR,IAGjB,OACE,qBAAQN,SAAR,EAA4BY,MAA5B,EAA8CG,QAAM,GAClD,qBACEH,MADF,EAEEC,YAAaZ,EAAAA,YAAAA,aAAgCA,EAF/C,QAGEe,KAAM,CACJ,CAAEX,KAAF,QAAiBY,QAASR,GAC1B,CAAEJ,KAAF,WAAoBY,QAASR,GAC7B,CAAEJ,KAAF,UAAmBY,QAAS,WAC5B,CAAEZ,KAAF,SAAkBY,QAAST,KAG7B,0BAAQU,KAAK,uBACVC,KAAAA,UAZP,KAeE,uBACE,8BACE,uBADF,GAEE,mBACEC,MAAO,CACLC,QAAS,UAGVC,GAAAA,CAAAA,GAAAA,OAPL,eASE,qBACEC,MAAOhB,EAAAA,gBADT,MAEEa,MAAO,CACLI,MADK,MAELC,OAFK,OAGLC,UAHK,QAILC,OAJK,SAKLC,UALK,qCAMLC,aAAc,UAIpB,mBACEC,UADF,eAEEC,wBAAyB,CAAEC,OAAQ/B,EAAKgC,QAE1C,sBAAIb,MAAO,QAQZ,IA+BDc,EAAUC,EAAAA,QAAAA,QAAAA,WAAH,iEAAGA,CAAH,CAAb,+BAKMC,EAAQD,EAAAA,QAAAA,GAAAA,WAAH,+DAAGA,CAAH,8CAGPE,EAAAA,EAAAA,MAAAA,MAHO,eAAX,kCAQMC,EAAOH,EAAAA,QAAAA,EAAAA,WAAH,8DAAGA,CAAH,qCAAV,MAKMI,EAAeJ,EAAAA,QAAAA,QAAAA,WAAH,sEAAGA,CAAH,CAAlB,qBAIiBA,EAAAA,EAAAA,SAAH,qFAAGA,CAAH,CAAd,4DAM4BA,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,CAAzB,8HASsBA,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,mBAEfE,EAAAA,EAAAA,MAAAA,MAFe,eAAnB","sources":["webpack://gatsby-starter-blog/./src/templates/blog-project.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport moment from 'moment';\nimport { DiscussionEmbed } from 'disqus-react';\n\nimport Layout from '../components/templates/layout';\nimport SEO, { getSchemaOrgJSONLD } from '../components/templates/seo';\nimport ContextPostCard from 'components/molecules/PostCard/context';\nimport { MIDDLE_GREY } from 'components/atoms/colors';\nimport theme from 'styles/theme';\n\nconst BlogProjectTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  const { excerpt } = post;\n  const { slug } = post.fields;\n  const { name, date, thumbnail } = post.frontmatter;\n  const url = `${data.site.siteMetadata.siteUrl}${slug}`;\n  const image = thumbnail.childImageSharp.fluid.src;\n\n  const schemaOrgJSONLD = getSchemaOrgJSONLD({\n    url,\n    title: name,\n    image,\n    description: excerpt,\n    datePublished: date,\n  });\n\n  return (\n    <Layout location={location} title={siteTitle} isBlog>\n      <SEO\n        title={name}\n        description={post.frontmatter.description || post.excerpt}\n        meta={[\n          { name: 'image', content: image },\n          { name: 'og:image', content: image },\n          { name: 'og:type', content: 'article' },\n          { name: 'og:url', content: url },\n        ]}\n      >\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n      </SEO>\n      <Article>\n        <header>\n          <Title>{name}</Title>\n          <Date\n            style={{\n              display: `block`,\n            }}\n          >\n            {moment(date).format('YYYY.MM.DD')}\n          </Date>\n          <Image\n            fluid={thumbnail.childImageSharp.fluid}\n            style={{\n              width: '70%',\n              height: 'auto',\n              objectFit: 'cover',\n              margin: '0 auto',\n              boxShadow: '0 4px 12px 4px rgba(0, 0, 0, 0.24)',\n              borderRadius: '8px',\n            }}\n          />\n        </header>\n        <PostContents\n          className=\"postContents\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <hr style={{}} />\n      </Article>\n    </Layout>\n  );\n};\n\nexport default BlogProjectTemplate;\n\nexport const pageQuery = graphql`\n  query BlogProjectBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        name\n        date\n        stacks\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Article = styled.article`\n  padding: 0 12px;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.2rem;\n  margin-bottom: 0.5rem;\n  ${theme.media.phone`\n  font-size: 1.8rem;\n  `}\n`;\n\nconst Date = styled.p`\n  margin-bottom: 1.45rem;\n  color: ${MIDDLE_GREY};\n`;\n\nconst PostContents = styled.section`\n  padding: 2rem 0;\n`;\n\nconst ListLink = styled(Link)`\n  margin-left: auto;\n  margin-right: 1rem;\n  color: rgb(73, 80, 87);\n`;\n\nconst ContextPostsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n  margin-bottom: 20px;\n`;\n\nconst DisqusWrapper = styled.div`\n  width: 100%;\n  ${theme.media.phone`\n    width: 90%;\n    margin: 0 auto;\n  `}\n`;\n"],"names":["data","pageContext","location","post","siteTitle","excerpt","slug","name","date","thumbnail","url","image","schemaOrgJSONLD","getSchemaOrgJSONLD","title","description","datePublished","isBlog","meta","content","type","JSON","style","display","moment","fluid","width","height","objectFit","margin","boxShadow","borderRadius","className","dangerouslySetInnerHTML","__html","html","Article","styled","Title","theme","Date","PostContents"],"sourceRoot":""}